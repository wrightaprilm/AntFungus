################################################################################
#
# RevBayes Example: Bayesian inference of phylogeny using a GTR+Gamma+Inv
#			substitution model for a 2-gene partition model
#
# authors: Michael Landis, Sebastian Hoehna, Tracy A. Heath and Brian R. Moore
#
################################################################################


#######################
# Reading in the Data #
#######################

# read in the character data

data = readDiscreteCharacterData("data/MuellerAlignmnetJan12FINAL.nex")


# Get some useful variables from the data. We need these later on.
n_species <- data.ntaxa()
n_branches <- 2 * n_species - 3
taxa <- data.taxa()

mvi = 0
mni = 0

##################################
#      Substitution Model        #
#   Loop over each data subset   #
##################################
  

    # exchangeability rates for partition i
    er_prior <- v(1,1,1,1,1,1)
    er ~ dnDirichlet(er_prior)
    moves[++mvi] = mvSimplexElementScale(er, alpha=10, tune=true, weight=3) 

    # stationary frequencies for partition i
    pi_prior <- v(1,1,1,1)
    pi ~ dnDirichlet(pi_prior)
    moves[++mvi] = mvSimplexElementScale(pi, alpha=10, tune=true, weight=2) 

    # rate matrix for partition i
    Q := fnGTR(er,pi) 
  
    # +Gamma for partition i
    alpha_prior_mean <- ln(2.0)
    alpha_prior_sd <- 0.587405
    alpha ~ dnLognormal( alpha_prior_mean, alpha_prior_sd )
    gamma_rates := fnDiscretizeGamma( alpha, alpha, 4, false )

    # add moves for the alpha parameter
    moves[++mvi] = mvScale(alpha,weight=2)

    # the probability of a site being invariable
    pinvar ~ dnBeta(1,1)
    moves[++mvi] = mvScale(pinvar, lambda=0.1, tune=true, weight=2.0)
    moves[++mvi] = mvSlide(pinvar, delta=0.1, tune=true, weight=2.0)


##############
# Tree model #
##############

#out_group = clade("")
# Prior distribution on the tree topology	
topology ~ dnUniformTopology(taxa)
moves[++mvi] = mvNNI(topology, weight=5.0)
moves[++mvi] = mvSPR(topology, weight=1.0)

# Branch length prior
for (i in 1:n_branches) {
    bl[i] ~ dnExponential(10.0)
	moves[++mvi] = mvScale(bl[i])
}

TL := sum(bl)
	
psi := treeAssembly(topology, bl)

###################
# PhyloCTMC Model #
###################

phyloSeq ~ dnPhyloCTMC(tree=psi, Q=Q, branchRates=bl, siteRates=gamma_rates, pInv=pinvar, type="DNA")
    phyloSeq.clamp(data)



############
# Analysis #
############

mymodel = model(psi)

# add monitors
monitors[++mni] = mnScreen(alpha, pinvar, TL, printgen=1000)
monitors[++mni] = mnFile(psi, filename="output/unpart.trees", printgen=10)
monitors[++mni] = mnModel(filename="output/unpart.log",printgen=10)

# run the analysis
 pow_p = powerPosterior(mymodel, moves, monitors, "output/unpart.out", cats=100)
 pow_p.burnin(generations=30000,tuningInterval=200)
 pow_p.run(generations=100000)
#
 ss = steppingStoneSampler(file="output/unpart.out", powerColumnName="power", likelihoodColumnName="likelihood")
 ss.marginal()
#
 ps = pathSampler(file="output/unpart.out", powerColumnName="power", likelihoodColumnName="likelihood")
 ps.marginal()

# you may want to quit RevBayes now
q()
